spring.config.import=optional:file:.env[.properties]
spring.application.name=ododok

# Database Configuration
spring.datasource.url=${POSTGRES_URL}
spring.datasource.username=${POSTGRES_USERNAME}
spring.datasource.password=${POSTGRES_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA Configuration
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=true

# H2 Console (for development)
spring.h2.console.enabled=true

# Google OAuth Configuration
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=profile,email
spring.security.oauth2.client.registration.google.redirect-uri=https://ododok.zuu3.kr/oauth/callback
#spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:3000/oauth/callback

# JWT Configuration
jwt.secret=${JWT_SECRET}
jwt.access-token-expiration=${JWT_ACCESS_TOKEN_EXPIRATION}
jwt.refresh-token-expiration=${JWT_REFRESH_TOKEN_EXPIRATION}

# Server Configuration
server.port=${SERVER_PORT:8080}

# CSV Upload Configuration
csv.upload.max-file-size=5242880
csv.upload.max-rows=1000
csv.upload.upsert-key=question

# File Upload Configuration
spring.servlet.multipart.max-file-size=5MB
spring.servlet.multipart.max-request-size=5MB

# Hugging Face Configuration
gemini.api.key=${GEMINI_API_KEY}
